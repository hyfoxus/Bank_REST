databaseChangeLog:
  - changeSet:
      id: 001-schema
      author: you
      changes:
        - createTable:
            tableName: users
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true, primaryKeyName: pk_users } }
              - column: { name: name, type: VARCHAR(64), constraints: { nullable: false, unique: true } }
              - column: { name: role, type: VARCHAR(16), constraints: { nullable: false } }
              - column: { name: password_hash, type: VARCHAR(100) }

        - createTable:
            tableName: cards
            columns:
              - column: { name: id, type: BIGSERIAL, constraints: { primaryKey: true, primaryKeyName: pk_cards } }
              - column: { name: owner_id, type: BIGINT, constraints: { nullable: false } }
              - column: { name: card_number, type: VARCHAR(512), constraints: { nullable: false } } # шифр/base64
              - column: { name: last4, type: VARCHAR(4), constraints: { nullable: true } }
              - column: { name: expiry_date, type: DATE, constraints: { nullable: true } }
              - column: { name: status, type: VARCHAR(16), constraints: { nullable: false } }       # Enum STRING
              - column: { name: balance, type: NUMERIC(19,2), constraints: { nullable: false } }
              - column: { name: version, type: BIGINT, defaultValueNumeric: 0 }                     # @Version

        - addForeignKeyConstraint:
            baseTableName: cards
            baseColumnNames: owner_id
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_cards_users
            onDelete: CASCADE

        - createIndex:
            tableName: cards
            indexName: idx_cards_owner
            columns: [ { name: owner_id } ]
        - createIndex:
            tableName: cards
            indexName: idx_cards_last4
            columns: [ { name: last4 } ]
        - createIndex:
            tableName: users
            indexName: uq_users_name
            unique: true
            columns: [ { name: name } ]